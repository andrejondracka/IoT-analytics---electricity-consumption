{
    "collab_server" : "",
    "contents" : "library(RMySQL)\nlibrary(tidyverse)\n\n####load data and merge####\n\ncon = dbConnect(MySQL(), user='deepAnalytics', password='Sqltask1234!', dbname='dataanalytics2018', host='data-analytics-2018.cbrosir2cswx.us-east-1.rds.amazonaws.com')\n\ndbListTables(con)\ndbListFields(con, 'yr_2009')\n\nyr_2006 <- dbGetQuery(con, \"SELECT Date, Time, Sub_metering_1, Sub_metering_2, Sub_metering_3 FROM yr_2006\")\nyr_2007 <- dbGetQuery(con, \"SELECT Date, Time, Sub_metering_1, Sub_metering_2, Sub_metering_3 FROM yr_2007\")\nyr_2008 <- dbGetQuery(con, \"SELECT Date, Time, Sub_metering_1, Sub_metering_2, Sub_metering_3 FROM yr_2008\")\nyr_2009 <- dbGetQuery(con, \"SELECT Date, Time, Sub_metering_1, Sub_metering_2, Sub_metering_3 FROM yr_2009\")\nyr_2010 <- dbGetQuery(con, \"SELECT Date, Time, Sub_metering_1, Sub_metering_2, Sub_metering_3 FROM yr_2010\")\n\nmeter_data <- rbind(yr_2007, yr_2008, yr_2009)\n\n\n####converting dates and times####\nmeter_data <-cbind(meter_data,paste(meter_data$Date,meter_data$Time), stringsAsFactors=FALSE)\ncolnames(meter_data)[6] <-\"DateTime\"\nmeter_data <- meter_data[,c(ncol(meter_data), 1:(ncol(meter_data)-1))]\n\nmeter_data$DateTime <- as.POSIXct(meter_data$DateTime, \"%Y/%m/%d %H:%M:%S\")\nattr(meter_data$DateTime, \"tzone\") <- \"Europe/Paris\"\n\n###writing out year, month, day, hour, minute, weekday\nmeter_data$Weekday <- as.factor(lubridate::wday(meter_data$DateTime, label = TRUE))\nmeter_data$Year <- lubridate::year(meter_data$DateTime)\nmeter_data$Month <- lubridate::month(meter_data$DateTime)\nmeter_data$Day <- lubridate::day(meter_data$DateTime)\nmeter_data$Hour <- lubridate::hour(meter_data$DateTime)\nmeter_data$Minute <- lubridate::minute(meter_data$DateTime)\nmeter_data$Time <- strftime(meter_data$DateTime, format= \"%H:%M\")\n\nmeter_data <- gather(meter_data, key = 'meter', value = 'consumption', Sub_metering_1, Sub_metering_2, Sub_metering_3)\n\n####plots of smoothed daily consumption, grouped in various ways####\n\n####per weekday\ne <- ggplot(data = meter_data) + geom_smooth(aes(x = Hour, y = consumption, color = meter)) +\n    facet_wrap(vars(Weekday))\ne\n\nf <- ggplot(data = meter_data) + geom_smooth(aes(x = Hour, y = consumption, color = Weekday)) +\n  facet_wrap(vars(meter))\nf\n\n\n####summarize data by hours in submeters and weekdays in order to avoid geom_smooth and use a line instead####\n\nsumm <- meter_data %>% group_by(Weekday,meter,Hour) %>% summarize(mean_consumption = mean(consumption))\n\nsumm2 <- subset(summ, meter == 'Sub_metering_1')\nsumm2 <- subset(summ2, Weekday == 1)\nsumm2 <- summ2[,c(3,4)]\n\n\nee <- ggplot(data = summ) + geom_line(aes(x = Hour, y = mean_consumption, color = meter)) +\n  facet_wrap(vars(Weekday))\nee\n\n#per month\ng <- ggplot(data = meter_data) + geom_line(aes(x = Hour, y = consumption, color = meter)) +\n  facet_wrap(vars(Month))\ng\n\n\n\n####grouping data in hourly interval and averaging####\nmeter_data_smooth <- meter_data %>% group_by(Year, Month, Day, Hour, meter, Weekday, Date) %>% summarize(hourly_consumption = mean(consumption))\n\n#hist(meter_data_smooth[meter_data_smooth$meter == 'Sub_metering_1' & meter_data_smooth$Hour == 12,]$hourly_consumption)\n\nh <- ggplot(data = meter_data_smooth) + geom_smooth(aes(x = Hour, y = hourly_consumption, color = meter)) +\n  facet_wrap(vars(Month))\nh\n\n####average daily consumptions and boxplot of per weekday####\nmeter_data_smoothday <- meter_data_smooth %>% group_by(Year, Month, Day, meter, Weekday, Date) %>% summarize(daily_consumption = mean(hourly_consumption))\n\ni <- ggplot(data = meter_data_smoothday) + geom_boxplot(aes(x = Weekday, y = daily_consumption)) +\n  facet_wrap(vars(meter))\ni\n\n#cor(meter_data_smoothday[meter_data_smoothday$Weekday == 'Monday' & meter_data_smoothday$meter == 'Sub_metering_2',]$daily_consumption, meter_data_smoothday[meter_data_smoothday$Weekday == 'Tuesday' & meter_data_smoothday$meter == 'Sub_metering_2',]$daily_consumption)\n\n\n\n####example consumption plots for different timescales (averaging)####\n#one month (per day)\nsummm <- meter_data %>% group_by(meter,Year,Month,Day) %>% summarize(consumption = mean(consumption))\ng <- ggplot(data = summm[summm$Year == 2008 & summm$Month == 1,]) + geom_point(aes(x = Day, y = consumption, color = meter, group = 1)) + ggtitle(\"January 2008\")\ng\n\n#one year (per month)\nsummm2 <- meter_data %>% group_by(meter,Year,Month) %>% summarize(consumption = mean(consumption))\ngg <- ggplot(data = summm2[summm2$Year == 2008,]) + geom_point(aes(x = as.factor(Month), y = consumption, color = meter, group = 1)) + ggtitle(\"2008\") + xlab('Month')\ngg\n\n#one hour (per minute)\nggg <- ggplot(data = meter_data[meter_data$Year == 2008 & meter_data$Month == 2 & meter_data$Day == 2 & meter_data$Hour == 16,]) + \n  geom_point(aes(x = Minute, y = consumption, color = meter, group = 1)) + ggtitle(\" February 2th 2008, 16h\") + xlab('Minute')\nggg\n\n#one day (per hour)\nsummm3 <- meter_data %>% group_by(meter,Year,Month,Day,Hour) %>% summarize(consumption = mean(consumption))\ngggg <- ggplot(data = summm3[summm3$Year == 2008 & summm3$Month == 2 & summm3$Day == 2,]) + \n  geom_point(aes(x = Hour, y = consumption, color = meter, group = 1)) + ggtitle(\" February 2th 2008\") + xlab('Hour')\ngggg\n\n\n\n\n\n",
    "created" : 1572362636786.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2894739004",
    "id" : "4B96E9B8",
    "lastKnownWriteTime" : 1571834620,
    "last_content_update" : 1571834620,
    "path" : "~/Documents/ubiqum/module3_exploratory/code2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}